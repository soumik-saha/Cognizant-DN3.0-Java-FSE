CREATE OR REPLACE PACKAGE CUSTOMERMANAGEMENT AS

    PROCEDURE ADDNEWCUSTOMER(
        P_CUSTOMER_ID IN NUMBER,
        P_NAME IN VARCHAR2,
        P_DOB IN DATE,
        P_BALANCE IN NUMBER
    );

    PROCEDURE UPDATECUSTOMERDETAILS(
        P_CUSTOMER_ID IN NUMBER,
        P_NAME IN VARCHAR2,
        P_BALANCE IN NUMBER
    );

    FUNCTION GETCUSTOMERBALANCE(
        P_CUSTOMER_ID IN NUMBER
    ) RETURN NUMBER;
END CUSTOMERMANAGEMENT;
/

CREATE OR REPLACE PACKAGE BODY CUSTOMERMANAGEMENT AS

    PROCEDURE ADDNEWCUSTOMER(
        P_CUSTOMER_ID IN NUMBER,
        P_NAME IN VARCHAR2,
        P_DOB IN DATE,
        P_BALANCE IN NUMBER
    ) IS
    BEGIN
        INSERT INTO CUSTOMERS (
            CUSTOMERID,
            NAME,
            DOB,
            BALANCE,
            LASTMODIFIED
        ) VALUES (
            P_CUSTOMER_ID,
            P_NAME,
            P_DOB,
            P_BALANCE,
            SYSDATE
        );
        COMMIT;
    END ADDNEWCUSTOMER;

    PROCEDURE UPDATECUSTOMERDETAILS(
        P_CUSTOMER_ID IN NUMBER,
        P_NAME IN VARCHAR2,
        P_BALANCE IN NUMBER
    ) IS
    BEGIN
        UPDATE CUSTOMERS
        SET
            NAME = P_NAME,
            BALANCE = P_BALANCE,
            LASTMODIFIED = SYSDATE
        WHERE
            CUSTOMERID = P_CUSTOMER_ID;
        COMMIT;
    END UPDATECUSTOMERDETAILS;

    FUNCTION GETCUSTOMERBALANCE(
        P_CUSTOMER_ID IN NUMBER
    ) RETURN NUMBER IS
        V_BALANCE NUMBER;
    BEGIN
        SELECT
            BALANCE INTO V_BALANCE
        FROM
            CUSTOMERS
        WHERE
            CUSTOMERID = P_CUSTOMER_ID;
        RETURN V_BALANCE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 0;
    END GETCUSTOMERBALANCE;
END CUSTOMERMANAGEMENT;
/